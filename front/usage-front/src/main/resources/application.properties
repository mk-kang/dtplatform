#spring.session.store-type=jdbc
#spring.session.jdbc.initialize-schema=always

#DB jndi
#docker run --name myPostgreSQL -e POSTGRES_USER=test -e POSTGRES_PASSWORD=1234 -d -p 5432:5432 postgres
## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)•
spring.datasource.url=jdbc:postgresql://192.168.99.100:5432/test
spring.datasource.username=test
spring.datasource.password=1234

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

#spring.datasource.driver-class-name=org.postgresql.Driver	
#spring.datasource.pool-size=30
#spring.datasource.type=
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
#
#spring.jpa.hibernate.use-new-id-generator-mappings=false
##spring.jpa.database=mysql
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.show-sql=true
#spring.jpa.generate-ddl=true
#spring.jpa.open-in-view=false
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.format_sql=true
#
#spring.jpa.properties.hibernate.connection.charSet=UTF-8
#spring.jpa.properties.hibernate.hbm2ddl.import_files_sql_extractor=org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor


#redis
#docker run -d --name redis-server redis
spring.session.store-type=redis
spring.redis.host=192.168.99.100
spring.redis.port=6379
#spring.redis.password=

#session
# Session timeout. If a duration suffix is not specified, seconds will be used.
server.servlet.session.timeout=10m
# Sessions flush mode.
spring.session.redis.flush-mode=on-save
# Namespace for keys used to store sessions.
spring.session.redis.namespace=spring:session

# add for redis start failed
#spring.main.allow-bean-definition-overriding: true

# url prefix restcontroller
#server.context-path=/api/usage/
